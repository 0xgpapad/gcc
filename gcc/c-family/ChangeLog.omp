2021-05-25  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-25  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/99928
	* c-omp.c (c_omp_split_clauses): Copy reduction to teams when teams is
	combined with simd and not with taskloop or for.

2021-05-23  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-21  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/99928
	* c-omp.c (c_omp_split_clauses): Set OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT
	on firstprivate clause copy going to target construct, and for
	target simd set also OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT_TARGET bit.

2021-05-23  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-21  Jakub Jelinek  <jakub@redhat.com>
2021-04-30  Kwok Cheung Yeung  <kcy@codesourcery.com>

	Backport from mainline
	2021-04-23  Thomas Schwinge  <thomas@codesourcery.com>

	* c.opt (Wopenacc-parallelism): New.

2020-08-30  Sandra Loosemore  <sandra@codesourcery.com>

	* c-omp.c (end_test_ok_for_annotation_r): New.
	(end_test_ok_for_annotation): New.
	(check_and_annotate_for_loop): Use the new helper function.

2020-08-30  Sandra Loosemore  <sandra@codesourcery.com>

	* c-omp.c (annotate_for_loop): Move initializer processing...
	(check_and_annotate_for_loop): ... to here.  Allow the loop
	variable as either operand to the condition.

2020-08-22  Sandra Loosemore  <sandra@codesourcery.com>

	Allow annotation of loops containing calls to builtins in
	kernels regions.

	* c-omp.c (annotate_loops_in_kernels_regions): Test for
	calls to builtins.

2020-08-19  Sandra Loosemore  <sandra@codesourcery.com>

	Annotate inner loops in "acc kernels loop" directives (C/C++).

	* c-omp.c (annotate_loops_in_kernels_regions): Process inner
	loops in combined "acc kernels loop" directives.

2020-03-27  Sandra Loosemore  <sandra@codesourcery.com>

	* c-common.h (c_oacc_annotate_loops_in_kernels_regions): Declare.
	* c-omp.c: Include tree-iterator.h
	(enum annotation_state): New.
	(struct annotation_info): New.
	(do_not_annotate_loop): New.
	(do_not_annotate_loop_nest): New.
	(annotation_error): New.
	(c_finish_omp_for_internal): Split from c_finish_omp_for.  Use
	annotation_error function.  Code refactoring to avoid destructive
	changes that cannot be undone in case of error.
	(is_local_var): New.
	(lang_specific_unwrap_initializer): New.
	(annotate_for_loop): New.
	(check_and_annotate_for_loop): New.
	(annotate_loops_in_kernels_regions): New.
	(c_oacc_annotate_loops_in_kernels_regions): New.
	* c.opt (Wopenacc-kernels-annotate-loops): New.
	(fopenacc-kernels-annotate-loops): New.

2019-01-09  Julian Brown  <julian@codesourcery.com>

	* c-cppbuiltin.c (c_cpp_builtins): Update _OPENACC define to 201711.

2018-10-02  Thomas Schwinge  <thomas@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* c-pragma.h (pragma_omp_clause): Add PRAGMA_OACC_CLAUSE_NOHST.
