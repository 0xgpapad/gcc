2021-08-17  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-08-17  Jakub Jelinek  <jakub@redhat.com>

	* c-parser.c (OMP_SCOPE_CLAUSE_MASK): Define.
	(c_parser_omp_scope): New function.
	(c_parser_omp_construct): Handle PRAGMA_OMP_SCOPE.

2021-08-16  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-08-12  Jakub Jelinek  <jakub@redhat.com>

	* c-parser.c (c_parser_omp_clause_name): Parse filter clause name.
	(c_parser_omp_clause_filter): New function.
	(c_parser_omp_all_clauses): Handle PRAGMA_OMP_CLAUSE_FILTER.
	(OMP_MASKED_CLAUSE_MASK): Define.
	(c_parser_omp_masked): New function.
	(c_parser_omp_parallel): Handle parallel masked.
	(c_parser_omp_construct): Handle PRAGMA_OMP_MASKED.
	* c-typeck.c (c_finish_omp_clauses): Handle OMP_CLAUSE_FILTER.

2021-08-16  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-08-12  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.c (c_parser_omp_clause_proc_bind): Accept
	'primary' as alias for 'master'.

2021-07-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-07-02  Jakub Jelinek  <jakub@redhat.com>

	PR c/101297
	* c-parser.c (c_parser_omp_atomic): Consume comma only if it
	appears before a CPP_NAME.

2021-06-15  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-06-14  Tobias Burnus  <tobias@codesourcery.com>

	PR c/100913
	* c-parser.c (c_parser_omp_clause_affinity): No need to set iterator
	var in the error case.

2021-06-04  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-06-03  Jakub Jelinek  <jakub@redhat.com>

	PR c++/100859
	* c-typeck.c (c_finish_omp_clauses): Move OMP_CLAUSE_AFFINITY
	after depend only cases.

2021-05-28  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-28  Jakub Jelinek  <jakub@redhat.com>

	* c-typeck.c (handle_omp_array_sections): Copy OMP_CLAUSE_MAP_IMPLICIT.
	(c_finish_omp_clauses): Move not just OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT
	marked clauses last, but also OMP_CLAUSE_MAP_IMPLICIT.  Add
	map_firstprivate_head bitmap, set it for GOMP_MAP_FIRSTPRIVATE_POINTER
	maps and silently remove OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT if it is
	present too.  For OMP_CLAUSE_MAP_IMPLICIT silently remove the clause
	if present in map_head, map_field_head or map_firstprivate_head
	bitmaps.

2021-05-28  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-28  Tobias Burnus  <tobias@codesourcery.com>

	* c-parser.c (c_parser_omp_clause_affinity): New.
	(c_parser_omp_clause_name, c_parser_omp_variable_list,
	c_parser_omp_all_clauses, OMP_TASK_CLAUSE_MASK): Handle affinity clause.
	* c-typeck.c (handle_omp_array_sections_1, handle_omp_array_sections,
	c_finish_omp_clauses): Likewise.

2021-05-23  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-21  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/99928
	* c-typeck.c (c_finish_omp_clauses): Move firstprivate clauses with
	OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT to the end of the chain.  Don't error
	if a decl is mentioned both in map clause and in such firstprivate
	clause unless OMP_CLAUSE_FIRSTPRIVATE_IMPLICIT_TARGET is also set.

2021-05-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-19  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/99928
	* c-parser.c (c_parser_omp_master): Set OMP_MASTER_COMBINED on
	master when combined with taskloop.
	(c_parser_omp_parallel): Don't set OMP_PARALLEL_COMBINED on
	parallel master when not combined with taskloop.

2021-05-14  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-12  Marcel Vollweiler  <marcel@codesourcery.com>

	* c-parser.c (c_parser_omp_clause_map): Support map-type-modifier
	'close'.

2021-05-14  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2021-05-04  Tobias Burnus  <tobias@codesourcery.com>

	* c-typeck.c (c_finish_omp_clauses): Accept float + complex
	for || and && reductions.

2020-08-19  Sandra Loosemore  <sandra@codesourcery.com>

	Add a "combined" flag for "acc kernels loop" etc directives.

	* c-parser.c (c_parser_oacc_loop): Set OACC_LOOP_COMBINED.

2020-03-27  Sandra Loosemore  <sandra@codesourcery.com>

	* c-decl.c (c_unwrap_for_init): New.
	(finish_function): Call c_oacc_annotate_loops_in_kernels_regions.

2019-09-10  Chung-Lin Tang  <cltang@codesourcery.com>

	* config/nvptx/nvptx.c (nvptx_expand_to_rtl_hook): New function
	implementing CUDA .params space transformation.
	(TARGET_EXPAND_TO_RTL_HOOK): implement hook with
	nvptx_expand_to_rtl_hook.

2018-12-13  Cesar Philippidis  <cesar@codesourcery.com>
	    Nathan Sidwell  <nathan@acm.org>
	    Julian Brown  <julian@codesourcery.com>

	* c-parser.c (c_parser_omp_variable_list): New c_omp_region_type
	argument.  Use it to specialize handling of OMP_CLAUSE_REDUCTION for
	OpenACC.
	(c_parser_oacc_data_clause): Add region-type argument.
	(c_parser_oacc_data_clause_deviceptr): Likewise.
	(c_parser_omp_clause_reduction): Change is_omp boolean parameter to
	c_omp_region_type.  Update call to c_parser_omp_variable_list.
	(c_parser_oacc_all_clauses): Update calls to
	c_parser_omp_clause_reduction.
	(c_parser_omp_all_clauses): Likewise.
	(c_parser_oacc_cache): Update call to c_parser_omp_var_list_parens.
	* c-typeck.c (c_finish_omp_clauses): Emit an error on orphan OpenACC
	gang reductions.  Suppress user-defined reduction error for OpenACC.

2018-10-02  Thomas Schwinge  <thomas@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* c-parser.c (c_parser_omp_clause_name): Handle "nohost".
	(c_parser_oacc_all_clauses): Handle PRAGMA_OACC_CLAUSE_NOHOST.
	(c_parser_oacc_routine): Update.
	* c-typeck.c (c_finish_omp_clauses): Handle OMP_CLAUSE_NOHOST.

2020-04-19  Chung-Lin Tang  <cltang@codesourcery.com>

	PR other/76739

	* c-typeck.c (handle_omp_array_sections_1): Add 'bool &non_contiguous'
	parameter, adjust recursive call site, add cases for allowing
	pointer based multi-dimensional arrays for OpenACC.
	(handle_omp_array_sections): Adjust handle_omp_array_sections_1 call,
	handle non-contiguous case to create dynamic array map.
